cmake_minimum_required(VERSION 3.12)

project (testsdl2gui)
project (libsdl2gui)

# libsdl2gui depends on the following third-party libraries:
# - sdl2, sdl2_image, sdl2_ttf, libxml2

set(EXT_LIB_DIR "${EXT_LIB_DIR}")
set(INC_DIR     "${EXT_LIB_DIR}/include")
set(LIB_DIR     "${EXT_LIB_DIR}/lib")
set(CPP_VERSION "20")

if (APPLE)
    set(OS "_macosx")
elseif (UNIX)
    set(OS "_linux")
elseif (WIN32)
    set(OS "_windows")
    set(RC "windows/libsdl2gui.rc")

    set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT testsdl2gui)
endif()

if (WIN32)
    set(LIBS      SDL2.lib SDL2_image.lib SDL2_ttf.lib libxml2.lib)
    set(LIBS_TEST SDL2.lib)
else()
    set(LIBS      -lSDL2 -lSDL2_image -lSDL2_ttf -lxml2)
    set(LIBS_TEST -lSDL2)
endif()

file(GLOB INC_H       "inc/*.h")
file(GLOB IMG         "img/*")
file(GLOB SOURCES_H   "src/*.h")
file(GLOB SOURCES_CPP "src/*.cpp")
file(GLOB TEST_H      "test/*.h")
file(GLOB TEST_CPP    "test/*.cpp")
file(GLOB UI          "ui/*")

add_library(libsdl2gui SHARED ${SOURCES_CPP} ${SOURCES_H} ${INC_H} ${RC})
source_group("Resources" FILES ${RC})
target_compile_definitions(libsdl2gui PRIVATE ${OS} _CRT_SECURE_NO_WARNINGS MAKEDLL)
target_include_directories(libsdl2gui PRIVATE "inc" ${INC_DIR})
target_link_directories(libsdl2gui PRIVATE ${LIB_DIR})
target_link_libraries(libsdl2gui PRIVATE ${LIBS})
set_property(TARGET libsdl2gui PROPERTY CXX_STANDARD ${CPP_VERSION})

add_executable(testsdl2gui ${TEST_CPP} ${TEST_H} ${INC_H} ${IMG} ${UI})
source_group("Images" FILES ${IMG})
source_group("UI" FILES ${UI})
target_compile_definitions(testsdl2gui PRIVATE ${OS})
target_include_directories(testsdl2gui PRIVATE "inc" ${INC_DIR})
target_link_directories(testsdl2gui PRIVATE ${LIB_DIR})
target_link_libraries(testsdl2gui PRIVATE libsdl2gui ${LIBS_TEST})
set_property(TARGET testsdl2gui PROPERTY CXX_STANDARD ${CPP_VERSION})

set(BUILD_DIR "${CMAKE_BINARY_DIR}")
set(SRC_DIR   "${CMAKE_SOURCE_DIR}")
set(DIST_DIR  "${BUILD_DIR}/dist")

if (APPLE)
    set(DLL_EXT "dylib")
    set(LIB_EXT "a")
    set(OUT_DIR "${BUILD_DIR}/out")
elseif (UNIX)
    set(DLL_EXT "so")
    set(LIB_EXT "a")
    set(OUT_DIR "${BUILD_DIR}/out")
elseif (WIN32)
    set(DLL_EXT "dll")
    set(LIB_EXT "lib")
    set(OUT_DIR "${BUILD_DIR}/$(Configuration)")
endif()

add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND if not exist \"${DIST_DIR}/bin\"   mkdir \"${DIST_DIR}/bin\")
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND if not exist \"${DIST_DIR}/inc\"   mkdir \"${DIST_DIR}/inc\")
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND if not exist \"${DIST_DIR}/lib\"   mkdir \"${DIST_DIR}/lib\")
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND if not exist \"${OUT_DIR}\"        mkdir \"${OUT_DIR}\")

add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND cp -f ${LIB_DIR}/SDL2.${DLL_EXT}       ${OUT_DIR})
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND cp -f ${LIB_DIR}/SDL2_image.${DLL_EXT} ${OUT_DIR})
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND cp -f ${LIB_DIR}/SDL2_ttf.${DLL_EXT}   ${OUT_DIR})
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND cp -f ${LIB_DIR}/libxml2.${DLL_EXT}    ${OUT_DIR})

add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND cp -f ${OUT_DIR}/*.${DLL_EXT}               ${DIST_DIR}/bin/)
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND cp -f ${SRC_DIR}/inc/libsdl2gui*.h          ${DIST_DIR}/inc/)
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND cp -f ${OUT_DIR}/libsdl2gui*.${LIB_EXT}     ${DIST_DIR}/lib/)
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND cp -f ${SRC_DIR}/LICENSE                    ${DIST_DIR}/LICENSE.txt)
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND cp -f ${EXT_LIB_DIR}/LICENSE-sdl2.txt       ${DIST_DIR}/)
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND cp -f ${EXT_LIB_DIR}/LICENSE-sdl2_ttf.txt   ${DIST_DIR}/)
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND cp -f ${EXT_LIB_DIR}/LICENSE-sdl2_image.txt ${DIST_DIR}/)
add_custom_command(TARGET libsdl2gui POST_BUILD COMMAND cp -f ${EXT_LIB_DIR}/LICENSE-libxml2.txt    ${DIST_DIR}/)

add_custom_command(TARGET testsdl2gui POST_BUILD COMMAND cp -rf ../img   ${OUT_DIR})
add_custom_command(TARGET testsdl2gui POST_BUILD COMMAND cp -rf ../ui    ${OUT_DIR})

if (WIN32)
    set_target_properties(testsdl2gui PROPERTIES LINK_FLAGS_DEBUG   "-SUBSYSTEM:CONSOLE,5.02")
    set_target_properties(testsdl2gui PROPERTIES LINK_FLAGS_RELEASE "-SUBSYSTEM:WINDOWS,5.02")
endif()
